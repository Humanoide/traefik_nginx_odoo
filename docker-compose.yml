version: "3"

networks:
  default:
    driver: bridge
  traefik:
    internal: true

services:
  traefik:
    image: traefik:2.0
    networks:
      - default
      - traefik
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    restart: always
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./acme.json:/acme.json"
      - "./traefik.toml:/traefik.toml"

  mysite:
    depends_on:
      - traefik
    image: tsouhaieb/nginx-sts 
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.mysite-https.redirectscheme.scheme=https"
      - "traefik.http.routers.mysite-http.entrypoints=web"
      - "traefik.http.routers.mysite-http.rule=Host(`nginx.tsouhaieb.space`)"
      - "traefik.http.routers.mysite-http.middlewares=mysite-https@docker"
      - "traefik.http.routers.mysite.entrypoints=web-secure"
      - "traefik.http.routers.mysite.rule=Host(`nginx.tsouhaieb.space`)"
      - "traefik.http.routers.mysite.tls=true"
      - "traefik.http.routers.mysite.tls.certresolver=default"
    networks:
      - default
    restart: always

  db:
    image: postgres:10
    restart: always
    environment:
      - POSTGRES_USER=odoo
      - POSTGRES_PASSWORD=odoo
      - POSTGRES_DB=postgres

  odoo:
    depends_on:
      - traefik
      - db
    image: odoo:12.0
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.odoo-https.redirectscheme.scheme=https"
      - "traefik.http.routers.odoo-http.entrypoints=web"
      - "traefik.http.services.odoo.loadbalancer.server.port=8069"
      - "traefik.http.routers.odoo-http.rule=Host(`odoo.tsouhaieb.space`)"
      - "traefik.http.routers.odoo-http.middlewares=odoo-https@docker"
      - "traefik.http.routers.odoo.entrypoints=web-secure"
      - "traefik.http.routers.odoo.rule=Host(`odoo.tsouhaieb.space`)"
      - "traefik.http.routers.odoo.tls=true"
      - "traefik.http.routers.odoo.tls.certresolver=default"
    networks:
      - default
    restart: always
 
